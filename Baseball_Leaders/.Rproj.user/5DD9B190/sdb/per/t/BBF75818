{
    "collab_server" : "",
    "contents" : "# Libraries ----------\nlibrary(shiny, warn.conflicts = FALSE, quietly = TRUE)\nlibrary(shinythemes, warn.conflicts = FALSE, quietly = TRUE)\nlibrary(tidyverse, warn.conflicts = FALSE, quietly = TRUE)\nlibrary(Lahman, warn.conflicts = FALSE, quietly = TRUE)\nlibrary(lubridate, warn.conflicts = FALSE, quietly = TRUE)\n\n# ggplot Formatting ----------\n# Updates theme_minimal so that there is borders around the graphs and the facet headings.\ntheme_minimal2 <- theme_minimal() %>%  theme_set()\ntheme_minimal2 <-\n  theme_update(\n    panel.border = element_rect(\n      linetype = \"solid\"\n      ,colour = \"grey92\"\n      ,fill = NA\n    )\n    ,strip.background = element_rect(\n      linetype = \"solid\"\n      ,colour = \"grey92\"\n      ,fill = NA\n    )\n  )\n\n# Loads Batting dataset as tibble.\n\n#Server ----------\nshinyServer(\n  function(input, output, clientData, session) {\n    \n    \n    # Dataset ----------\n    baseball_data <- reactive({\n      # Adds a progress bar to show the calculations are running.\n      withProgress(\n        message = \"Calculating...\"\n        ,value = NULL\n        # ,switch(\n        #   input$data_input\n        #   ,\"Batting\" = Batting\n        #   ,\"Pitching\" = Pitching\n        # ) %>%\n        ,Batting %>% \n          as.tibble() %>% \n          filter(\n            yearID >= input$year_lkup[[1]]\n            ,yearID <= input$year_lkup[[2]]\n          ) %>% \n          group_by(playerID) %>% \n          mutate(\n              Career_Stat = cumsum(!!quo(eval(parse(text = battingLabels %>% filter(variable == input$baseball_stat) %>% select(variable) %>% as.character()))))\n          ) %>% \n          arrange(desc(Career_Stat)) %>% \n          # Removes cases where a player appears multiple times in the list due to being a leader for multiple years.\n          distinct(\n            playerID\n            ,keep_all = TRUE\n          )\n      )\n    })\n    \n    # observe({\n    #   # Statistic List ----------\n    #   updateSelectizeInput(\n    #     session\n    #     ,\"baseball_stat\"\n    #     ,choices =\n    #       baseball_data() %>%\n    #       as.tibble() %>%\n    #       select(\n    #         -c(\n    #           playerID\n    #           ,yearID\n    #           ,stint\n    #           ,teamID\n    #           ,lgID\n    #         )\n    #       ) %>%\n    #       colnames()\n    #   )\n    # })\n    \n    # Leaderboard Table ----------\n    output$leaderboardTable <- renderTable({\n      \n      baseball_data() %>%\n        # Grabs the top n values.\n        head(input$n) %>% \n        mutate(\n          # In case more than one name is returned, we choose the first one, as it should be the exact match.\n          `Full Name` = paste(playerInfo(playerID)[1, ]$nameFirst, playerInfo(playerID)[1, ]$nameLast)\n        ) %>% \n        ungroup() %>%\n        select(\n          -c(\n            playerID\n            ,stint\n            ,teamID\n            ,lgID\n          )\n        ) %>% \n        select(\n          `Full Name`\n          ,Career_Stat\n          ,everything()\n        ) %>% \n        rename(Year = yearID)\n      \n    })\n    \n    # Leaderboard Plot ----------\n    output$leaderboardPlot <- renderPlot({\n      \n      ggplot(\n        baseball_data() %>% \n          head(input$n) %>% \n          mutate(\n            # In case more than one name is returned, we choose the first one, as it should be the exact match.\n            `Full Name` = paste(playerInfo(playerID)[1, ]$nameFirst, playerInfo(playerID)[1, ]$nameLast)\n          )\n        ,aes(\n          x = factor(`Full Name`, levels = `Full Name`[order(baseball_data()$Career_Stat %>% head(input$n) %>% desc())])\n          ,y = Career_Stat\n        )\n      ) +\n        geom_col(\n          alpha = 0.75\n        ) +\n        labs(\n          title = paste0(\"Top \", input$n, \" Players by Career \", input$baseball_stat, \"'s from \", input$year_lkup[[1]], \"-\", input$year_lkup[[2]])\n          ,x = \"Player\"\n          ,y = paste0(\"Career \", input$baseball_stat, \"'s\")\n        ) +\n        theme(\n          axis.text.x = element_text(angle = 90, hjust = 1)\n        )\n      \n    })\n    \n  })\n",
    "created" : 1501566337697.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "0|12|6|0|\n7|20|25|0|\n62|25|81|4|\n82|24|109|4|\n110|23|138|4|\n",
    "hash" : "2750159276",
    "id" : "BBF75818",
    "lastKnownWriteTime" : 1505767543,
    "last_content_update" : 1505767543697,
    "path" : "~/GitHub/shiny-server/Baseball_Leaders/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}